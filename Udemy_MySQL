Udemy MySQL Exercises

CREATE DATABASE IF NOT EXISTS SALES; 

USE SALES;

CREATE TABLE SALES
(
	purchase_number INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    date_of_purchase DATE NOT NULL,
    customer_id INT,
    item_code VARCHAR(10) NOT NULL
);

CREATE TABLE CUSTOMERS
(
	customer_id INT,
    first_name varchar(255),
    last_name varchar(255),
    email_address varchar(255),
    number_of_complaints int
);

select * from customers;

select * from sales.sales;

drop table sales;

create table sales
(
	purchase_number INT auto_increment,
    date_of_purchase date,
    customer_id int,
    item_code varchar(10),
primary key (purchase_number)
);

drop table customers;

create table customers
(
	customer_id INT,
    first_name varchar(255),
    last_name varchar(255),
    email_address varchar(255),
    number_of_complaints INT,
primary key(customer_id)
);

create table items
(
	item_code varchar(255),
    item varchar(255),
    unit_price numeric(10,2),
    company_id varchar(255),
primary key(item_code)
);

create table companies
(
	company_id varchar(255),
    company_name varchar(255),
    headquarters_phone_number int(12),
primary key(company_id)
);

create table customers (
customer_id INT AUTO_INCREMENT,
first_name varchar(255),
last_name varchar(255),
email_address varchar(255),
number_of_complaints INT,
primary key(customer_id)
);

alter table customers
add column gender ENUM('M','F') after last_name;

insert into customers (first_name, last_name, gender, email_address, number_of_complaints)
values ('John', 'Mackinley', 'M', 'john.mckinley@365careers.com', 0);

create table companies (
company_id varchar(255),
company_name varchar(255) default 'X',
headquarters_phone_number varchar(255),
unique key (headquarters_phone_number)
);

ALTER TABLE companies

MODIFY headquarters_phone_number VARCHAR(255) NULL;

 

ALTER TABLE companies

CHANGE COLUMN headquarters_phone_number headquarters_phone_number VARCHAR(255) NOT NULL;

use employees;

select dept_no from departments;

select * from departments;

select * from employees where first_name = 'Elvis';

select * from employees where gender = 'F' and first_name = 'Kellie';

select * from employees where first_name = 'Kellie' or first_name = 'Aruna';

select * from employees where gender = 'F' and (first_name = 'Kellie' or first_name = 'Aruna');

select * from employees where first_name IN ("Denis", "Elvis");

select * from employees where first_name NOT IN ("John", "Mark", "Jacob");

select * from employees where first_name like ('MarK%');

select * from employees where hire_date like ('2000%');

select * from employees where emp_no like ('1000_');

select * from employees where first_name like ('%jack%');
select * from employees where first_name not like ('%jack%');

select * from salaries where salary between 66000 and 70000;
select * from employees where emp_no not between 10004 and 10012;
select * from departments where dept_no between 'd003' and 'd006';

select * from departments where dept_no is not null;
select distinct hire_date from employees;

select count(salary) from salaries where salary >= 100000;
select count(*) from dept_manager;

select * from employees order by hire_date desc;

select salary, count(emp_no) as 'emps_with_same_salary'
 from salaries 
 where salary > 80000 
 group by salary
 order by salary;

 SELECT

    emp_no, AVG(salary)

FROM

    salaries

WHERE

    salary > 120000

GROUP BY emp_no

ORDER BY emp_no;

SELECT emp_no, AVG(salary)

FROM salaries

GROUP BY emp_no

HAVING AVG(salary) > 120000;

select emp_no from dept_emp
where from_date >= '2000-01-01'
group by emp_no
having count(from_date) > 1
order by emp_no;

select * from dept_emp limit 100;

select * from titles limit 10;

INSERT INTO employees

VALUES

(

    999903,

    '1977-09-14',

    'Johnathan',

    'Creek',

    'M',

    '1999-01-01'

);



insert into titles (emp_no, title, from_date)
values (999903, 'Senior Engineer', '1997-10-01');
 
 select * from titles order by emp_no desc;

 insert into dept_emp (emp_no, dept_no, from_date, to_date)
values (999903, 'd005', '1997-10-01', '9999-01-01');

SELECT 
    *
FROM
    departments
LIMIT 10;

create table departments_dup
(
	dept_no CHAR(4) NOT NULL,
    dept_name VARCHAR(40) NOT NULL
);
    
select * from departments_dup;

insert into departments_dup
(dept_no, dept_name)
select * from departments;

insert into departments values ('d010', 'Business Analysis');
select * from departments;

insert into employees values(999901, '1986-04-21', 'John', 'Smith', 'M', '2011-01-01');
select * from employees where emp_no = 999901;

UPDATE employees 
SET 
    first_name = 'Stella',
    last_name = 'Parkinson',
    birth_date = '1990-12-31',
    gender = 'F'
WHERE
    emp_no = 999901;

select * from departments_dup order by dept_no;
commit;
update departments_dup
set dept_no = 'd011', dept_name = 'Quality Control';
rollback;
commit;
select * from departments order by dept_no;
update departments
set dept_name = 'Data Analysis'
where dept_no = 'd010';

select * from employees where emp_no = 999903;
select * from titles where emp_no = 999903;
delete from employees where emp_no = 999903;
rollback;
select * from departments_dup;
delete from departments_dup;
select * from departments order by dept_no;
delete from departments where dept_no = 'd010';

select count(*) from dept_emp;
select * from dept_emp;
select count(distinct dept_no) from dept_emp;

select sum(salary) from salaries where from_date > '1997-01-01';
select min(emp_no) from employees;
select max(emp_no) from employees; 
select avg(salary) from salaries where from_date > '1997-01-01';

select round(avg(salary),2) from salaries where from_date > '1997-01-01';

alter table departments_dup 
change column dept_name dept_name varchar(40) null;
insert into departments_dup(dept_no) values ('d010'), ('d011');

select * from departments_dup order by dept_no;

alter table employees.departments_dup 
add column dept_manager varchar(255) null after dept_name;
commit;

select dept_no, ifnull(dept_name, 'Dept name not provided') as dept_name
from departments_dup;
select dept_no, coalesce(dept_name, 'Dept name not provided') as dept_name
from departments_dup;
select dept_no, dept_name, coalesce(dept_manager, dept_name, 'N/A') as dept_manager
from departments_dup;
select dept_no, dept_name, coalesce(dept_no, dept_name) as dept_info from departments_dup;
select ifnull(dept_no, 'N/A') as dept_no, ifnull(dept_name, 'Dept Name not provided') as dept_name
from departments_dup;